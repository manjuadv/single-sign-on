//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApp_01_Accounting_System.SingleSignOnService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SingleSignOnService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        SingleSignOnModule.SingleSignOnService.CompositeType GetDataUsingDataContract(SingleSignOnModule.SingleSignOnService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SingleSignOnModule.SingleSignOnService.CompositeType> GetDataUsingDataContractAsync(SingleSignOnModule.SingleSignOnService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSignOnToken", ReplyAction="http://tempuri.org/IService1/GetSignOnTokenResponse")]
        string GetSignOnToken(SingleSignOnModule.SingleSignOnService.AuthenticatingUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSignOnToken", ReplyAction="http://tempuri.org/IService1/GetSignOnTokenResponse")]
        System.Threading.Tasks.Task<string> GetSignOnTokenAsync(SingleSignOnModule.SingleSignOnService.AuthenticatingUser user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthenticatedUser", ReplyAction="http://tempuri.org/IService1/GetAuthenticatedUserResponse")]
        SingleSignOnModule.SingleSignOnService.AuthenticatedUser GetAuthenticatedUser(string encryptedToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthenticatedUser", ReplyAction="http://tempuri.org/IService1/GetAuthenticatedUserResponse")]
        System.Threading.Tasks.Task<SingleSignOnModule.SingleSignOnService.AuthenticatedUser> GetAuthenticatedUserAsync(string encryptedToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignOff", ReplyAction="http://tempuri.org/IService1/SignOffResponse")]
        void SignOff(string encryptedtoken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignOff", ReplyAction="http://tempuri.org/IService1/SignOffResponse")]
        System.Threading.Tasks.Task SignOffAsync(string encryptedtoken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TestApp_01_Accounting_System.SingleSignOnService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TestApp_01_Accounting_System.SingleSignOnService.IService1>, TestApp_01_Accounting_System.SingleSignOnService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public SingleSignOnModule.SingleSignOnService.CompositeType GetDataUsingDataContract(SingleSignOnModule.SingleSignOnService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SingleSignOnModule.SingleSignOnService.CompositeType> GetDataUsingDataContractAsync(SingleSignOnModule.SingleSignOnService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string GetSignOnToken(SingleSignOnModule.SingleSignOnService.AuthenticatingUser user) {
            return base.Channel.GetSignOnToken(user);
        }
        
        public System.Threading.Tasks.Task<string> GetSignOnTokenAsync(SingleSignOnModule.SingleSignOnService.AuthenticatingUser user) {
            return base.Channel.GetSignOnTokenAsync(user);
        }
        
        public SingleSignOnModule.SingleSignOnService.AuthenticatedUser GetAuthenticatedUser(string encryptedToken) {
            return base.Channel.GetAuthenticatedUser(encryptedToken);
        }
        
        public System.Threading.Tasks.Task<SingleSignOnModule.SingleSignOnService.AuthenticatedUser> GetAuthenticatedUserAsync(string encryptedToken) {
            return base.Channel.GetAuthenticatedUserAsync(encryptedToken);
        }
        
        public void SignOff(string encryptedtoken) {
            base.Channel.SignOff(encryptedtoken);
        }
        
        public System.Threading.Tasks.Task SignOffAsync(string encryptedtoken) {
            return base.Channel.SignOffAsync(encryptedtoken);
        }
    }
}
